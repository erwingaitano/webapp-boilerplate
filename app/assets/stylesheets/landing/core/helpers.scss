/********************
***** Mixins
********************/

@mixin translate($x, $y) {
  transform: translate($x, $y);
}

@mixin transformOrigin($transform) {
  transform-origin: $transform;
}

// Rotate
@mixin rotate($degrees) {
  transform: rotate($degrees);
}
@mixin rotateX($degrees) {
  transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  transform: rotateY($degrees);
}

// Scale
@mixin scale($ratio...) {
  transform: scale($ratio);
}

@mixin scaleX($ratio) {
  transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
  transform: scaleY($ratio);
}

// Skew
@mixin skew($x, $y) {
  transform: skewX($x) skewY($y);
}

@mixin text-box-height($num-lines, $font-size, $line-height){
  height: $num-lines*$font-size*$line-height;
  overflow: hidden;
}

@mixin set-placeholder-style(){
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder{ /* Firefox 18- */
    @content;  
  }

  &::-moz-placeholder{  /* Firefox 19+ */
    @content;  
  }

  &:-ms-input-placeholder{  
    @content;  
  }
}

// Range input slider 

@mixin range-slider-thump(){
  &::-webkit-slider-thumb {
    @content;
  }
  &::-moz-range-thumb {
    @content;
  }
  &::-ms-thumb {
    @content;
  }
}

@mixin range-slider-track(){
  &::-webkit-slider-runnable-track {
    @content;
  }

  &::-moz-range-track {
    animate: 0.2s;
    @content;
  }
  &::-ms-track {
    @content;
  }
}

// How to use it: 
// @include add-mobile-media-query(){ padding: 11px 10px; };
@mixin add-mobile-media-query(){
  @media screen and (max-width: 768px){
    @content;
  }
}

/********************
***** Placeholders
********************/

%clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

%translate-horizontal-vertical-center{
  transform: translate(-50%, -50%);
  position: absolute;
  left: 50%;
  top: 50%;
}

%translate-horizontal-center{
  transform: translate(-50%, 0);
  position: absolute;
  left: 50%;
}

%translate-vertical-center{
  transform: translate(0, -50%);
  position: absolute;
  top: 50%;
}

%cover-image{
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 50% 50%;
}

%disabled{
  filter: grayscale(100%);
  -webkit-backface-visibility: hidden;
  opacity: 0.7;  
}

%no-transform{
  -webkit-transform: none;
      -ms-transform: none; // IE9 only
       -o-transform: none;
          transform: none; 
}

%noselect-text{
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

%div-total-center-with-ghost-element{
  display: block;
  height: 100%;
  text-align: center;
  white-space: nowrap;

  &:before{
    content: "";
    display: inline-block;
    margin-right: -4px;
    vertical-align: middle;
    width: 0;
    height: 100%;
  }

  > *{
    white-space: normal;
  }
}

/********************
***** Functions
********************/

@function fix-font-centering-with-padding($padding-top-bottom, $padding-left-right){
  @return ($padding-top-bottom + 2) $padding-left-right ($padding-top-bottom - 2);
}

@function height-in-lines($num-lines, $font-size, $line-height){
  @return $num-lines*$font-size*$line-height + px;
}

/********************
***** FIXES
********************/

/** 
 *  When using border-radius and overflow: hidden with position: absolute: 
 *  -webkit-mask-image: -webkit-radial-gradient(circle, white, black); 
 *  Be careful, this also emulates the overflow hidden effect
 *
 * 
 *  This can aliviate a little the performance impact. PD: Dont apply on table elements! 
 *  And always test child elements
 *  
 *  -webkit-backface-visibility: hidden;
 *  -webkit-transform-style: preserve-3d;
 *  -webkit-perspective: 1000;
 *
 *  Angular animate (ng-animate/ngAnimate)
 *  When animating with angular please avoid assigning transform translate to the ng-enter/ng-leave ui-views. Because it will cause bug calculation on widths/heights through js (for example in my jquery.popup plugin) So far this error only happens in mobile and also when I try to calculate position/width of containers/viewports. (If you need to do transitions between pages, try to use only visibility/opacity combo and only declaring a transition-transform declaration with the delay for the animation will do it.)
 *  
 *  
 * IPAD viewport height=devide-height bug
 * Looks like if you set the height of the viewport to device-height, there are bugs calculationg the height on ipad.
 * So avoid adding this attritube.
 *  
 *  
 */

/********************
***** Classes
********************/

.cf{@extend %clearfix;}

// Spacing
.nomargin{margin: 0 !important;}
.noborder{border: 0 !important;}

// Positioning
.static{position: static !important;}
.relative{position: relative !important;}

// Displays
.hidden{display: none !important;}
.visually-hidden{visibility: hidden !important;}
.iblock{display: inline-block !important;}
.block{display: block !important;}
.cblock{
  display: block !important;
  margin: 0 auto !important;
  float: none !important;
}

// Float
.left{float: left !important;}
.right{float: right !important;}
.clearboth{clear: both !important;}

// Fonts
.text-center{text-align: center !important;}

// Center vertically with overflow auto. Note: height must be defined
.ctable{
  overflow: auto;
  height: 100%;
  
  .ctable__container{
    display: table;
    height: 100%;
    width: 100%;
  }
  .ctable__content{
    display: table-cell;
    vertical-align: middle;
  }
}
