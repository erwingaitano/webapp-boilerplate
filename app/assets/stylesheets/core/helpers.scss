/********************
***** Mixins
********************/

@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
      -ms-transform: translate($x, $y); // IE9 only
          transform: translate($x, $y);
}

@mixin transformOrigin($transform) {
  -webkit-transform-origin: $transform;
      -ms-transform-origin: $transform; // IE9 only
          transform-origin: $transform;
       -o-transform-origin: $transform;
}

// Rotate
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees); // IE9 only
       -o-transform: rotate($degrees);
          transform: rotate($degrees);
}
@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
      -ms-transform: rotateX($degrees); // IE9 only
       -o-transform: rotateX($degrees);
          transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
      -ms-transform: rotateY($degrees); // IE9 only
          transform: rotateY($degrees);
       -o-transform: rotateY($degrees);
}

// Scale
@mixin scale($ratio...) {
  -webkit-transform: scale($ratio);
      -ms-transform: scale($ratio); // IE9 only
       -o-transform: scale($ratio);
          transform: scale($ratio);
}

@mixin scaleX($ratio) {
  -webkit-transform: scaleX($ratio);
      -ms-transform: scaleX($ratio); // IE9 only
       -o-transform: scaleX($ratio);
          transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
  -webkit-transform: scaleY($ratio);
      -ms-transform: scaleY($ratio); // IE9 only
       -o-transform: scaleY($ratio);
          transform: scaleY($ratio);
}

// Skew
@mixin skew($x, $y) {
  -webkit-transform: skewX($x) skewY($y);
      -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
       -o-transform: skewX($x) skewY($y);
          transform: skewX($x) skewY($y);
}

// Animations
@mixin animation($animation) {
  -webkit-animation: $animation;
       -o-animation: $animation;
          animation: $animation;
}
@mixin animation-name($name) {
  -webkit-animation-name: $name;
          animation-name: $name;
}
@mixin animation-duration($duration) {
  -webkit-animation-duration: $duration;
          animation-duration: $duration;
}
@mixin animation-timing-function($timing-function) {
  -webkit-animation-timing-function: $timing-function;
          animation-timing-function: $timing-function;
}
@mixin animation-delay($delay) {
  -webkit-animation-delay: $delay;
          animation-delay: $delay;
}
@mixin animation-iteration-count($iteration-count) {
  -webkit-animation-iteration-count: $iteration-count;
          animation-iteration-count: $iteration-count;
}
@mixin animation-direction($direction) {
  -webkit-animation-direction: $direction;
          animation-direction: $direction;
}
@mixin animation-fill-mode($fill-mode) {
  -webkit-animation-fill-mode: $fill-mode;
          animation-fill-mode: $fill-mode;
}

// Transitions
@mixin transition($transition...) {
  -webkit-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}
@mixin transition-property($transition-property...) {
  -webkit-transition-property: $transition-property;
          transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
          transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration...) {
  -webkit-transition-duration: $transition-duration;
          transition-duration: $transition-duration;
}
@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
          transition-timing-function: $timing-function;
}
@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
     -moz-transition: -moz-transform $transition;
       -o-transition: -o-transform $transition;
          transition: transform $transition;
}

@mixin filter($filter-type, $filter-amount) { 
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}

@mixin filter-multiple($expression){
  -webkit-filter: $expression;
  -moz-filter: $expression;
  -ms-filter: $expression;
  -o-filter: $expression;
  filter: $expression;
}

@mixin text-box-height($num-lines, $font-size, $line-height){
  height: $num-lines*$font-size*$line-height;
  overflow: hidden;
}

@mixin set-placeholder-style(){
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder{ /* Firefox 18- */
    @content;  
  }

  &::-moz-placeholder{  /* Firefox 19+ */
    @content;  
  }

  &:-ms-input-placeholder{  
    @content;  
  }
}

// Range input slider 

@mixin range-slider-thump(){
  &::-webkit-slider-thumb {
    @content;
  }
  &::-moz-range-thumb {
    @content;
  }
  &::-ms-thumb {
    @content;
  }
}

@mixin range-slider-track(){
  &::-webkit-slider-runnable-track {
    @content;
  }

  &::-moz-range-track {
    animate: 0.2s;
    @content;
  }
  &::-ms-track {
    @content;
  }
}

// How to use it: 
// @include add-mobile-media-query(){ padding: 11px 10px; };
@mixin add-mobile-media-query(){
  @media screen and (max-width: 768px){
    @content;
  }
}

/********************
***** Placeholders
********************/

%clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

%translate-horizontal-vertical-center{
  @include translate(-50%, -50%);
  position: absolute;
  left: 50%;
  top: 50%;
}

%translate-horizontal-center{
  @include translate(-50%, 0);
  position: absolute;
  left: 50%;
}

%translate-vertical-center{
  @include translate(0, -50%);
  position: absolute;
  top: 50%;
}

%cover-image{
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 50% 50%;
}

%disabled{
  @include filter(grayscale, 100%);
  -webkit-backface-visibility: hidden;
  opacity: 0.7;  
}

%no-transform{
  -webkit-transform: none;
      -ms-transform: none; // IE9 only
       -o-transform: none;
          transform: none; 
}

%noselect-text{
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

%div-total-center-with-ghost-element{
  display: block;
  height: 100%;
  text-align: center;
  white-space: nowrap;

  &:before{
    content: "";
    display: inline-block;
    margin-right: -4px;
    vertical-align: middle;
    width: 0;
    height: 100%;
  }

  > *{
    white-space: normal;
  }
}

/********************
***** Functions
********************/

@function fix-font-centering-with-padding($padding-top-bottom, $padding-left-right){
  @return ($padding-top-bottom + 2) $padding-left-right ($padding-top-bottom - 2);
}

@function height-in-lines($num-lines, $font-size, $line-height){
  @return $num-lines*$font-size*$line-height + px;
}

/********************
***** FIXES
********************/

/** 
 *  When using border-radius and overflow: hidden with position: absolute: 
 *  -webkit-mask-image: -webkit-radial-gradient(circle, white, black); 
 *  Be careful, this also emulates the overflow hidden effect
 *
 * 
 *  This can aliviate a little the performance impact. PD: Dont apply on table elements! 
 *  And always test child elements
 *  
 *  -webkit-backface-visibility: hidden;
 *  -webkit-transform-style: preserve-3d;
 *  -webkit-perspective: 1000;
 *
 *  Angular animate (ng-animate/ngAnimate)
 *  When animating with angular please avoid assigning transform translate to the ng-enter/ng-leave ui-views. Because it will cause bug calculation on widths/heights through js (for example in my jquery.popup plugin) So far this error only happens in mobile and also when I try to calculate position/width of containers/viewports. (If you need to do transitions between pages, try to use only visibility/opacity combo and only declaring a transition-transform declaration with the delay for the animation will do it.)
 *  
 *  
 * IPAD viewport height=devide-height bug
 * Looks like if you set the height of the viewport to device-height, there are bugs calculationg the height on ipad.
 * So avoid adding this attritube.
 *  
 *  
 */

/********************
***** Classes
********************/

.cf{@extend %clearfix;}

// Spacing
.nomargin{margin: 0 !important;}
.noborder{border: 0 !important;}

// Positioning
.static{position: static !important;}
.relative{position: relative !important;}

// Displays
.hidden{display: none !important;}
.visually-hidden{visibility: hidden !important;}
.iblock{display: inline-block !important;}
.block{display: block !important;}
.cblock{
  display: block !important;
  margin: 0 auto !important;
  float: none !important;
}

// Float
.left{float: left !important;}
.right{float: right !important;}
.clearboth{clear: both !important;}

// Fonts
.text-center{text-align: center !important;}

// Center vertically with overflow auto. Note: height must be defined
.ctable{
  overflow: auto;
  height: 100%;
  
  .ctable__container{
    display: table;
    height: 100%;
    width: 100%;
  }
  .ctable__content{
    display: table-cell;
    vertical-align: middle;
  }
}
